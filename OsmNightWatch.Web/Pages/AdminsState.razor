@page "/AdminsState"

<PageTitle>Admins state</PageTitle>

@inject IJSRuntime JSRuntime
@using OsmNightWatch.Web.Data
@using OsmNightWatch.Lib
@inject IssuesDataService IssuesDataService

<p>Compares last known good state of admins with current state and detects if some of admins per country went missing or was added.</p>

@if (issuesData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Day/Name of relation</th>
                <th>Links</th>
                <th>First time seen</th>
                <th>More details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var issuesByDay in issuesData.AllIssues.Where(issue => issue.IssueType == "AdminsState").GroupBy(i => i.FirstTimeSeen.Value.Date).OrderByDescending(ig => ig.Key))
            {
                <tr>
                    <td><b>@issuesByDay.Key.ToString("yyyy-MM-dd  -  dddd")</b></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                foreach (var issue in issuesByDay.OrderByDescending(i => i.FirstTimeSeen).ThenBy(i => i.OsmType).ThenBy(i => i.OsmId))
                {
                    <tr style="@(lastClickedOsmId==issue.OsmId?"background-color: #e8f4f8;":"")">
                        <td><a @onclick="(e)=>HighligthMe(issue.OsmId)" href="https://www.openstreetmap.org/@Helper.ConvertToFullOsmType(issue.OsmType)/@issue.OsmId" target="_blank">@issue.OsmType.ToUpper()[0]@issue.OsmId - @issue.FriendlyName</a></td>
                        <td>
                            <a class="btn btn-primary" @onclick="(e)=>HighligthMe(issue.OsmId)" href="http://ra.osmsurround.org/analyzeRelation?relationId=@issue.OsmId" target="_blank">RA</a>
                            <a class="btn btn-warning" @onclick="(e)=>OpenJosm(issue.OsmId)">JOSM</a>
                        </td>
                        <td>@issue.FirstTimeSeen!.Value.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        <td>@issue.Details</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int? AdminLevel { get; set; }

    public long lastClickedOsmId = -1;

    private IssuesData? issuesData;

    protected override async Task OnInitializedAsync()
    {
        issuesData = await IssuesDataService.GetIssuesDataAsync();
    }

    public async Task HighligthMe(long osmId)
    {
        lastClickedOsmId = osmId;
        this.StateHasChanged();
    }

    public async Task OpenJosm(long osmId)
    {
        await JSRuntime.InvokeVoidAsync("CallJosm.Invoke", $"http://localhost:8111/load_object?new_layer=true&objects=r{osmId}&relation_members=true");
        await HighligthMe(osmId);
    }
}
