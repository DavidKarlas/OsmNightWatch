@page "/"

<PageTitle>OSM Nightwatch</PageTitle>

@using OsmNightWatch.Wasm.Data
@using OsmNightWatch.Lib
@inject IssuesDataService IssuesDataService
@inject NavigationManager NavigationManager

<h1>OSM Issues Overview</h1>

<p>Here is a list of current OSM issues. Let's fix them all.</p>

@if (issuesData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Issue type</th>
                <th>Number of issues</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var issueType in Helper.IssueTypes)
            {
                numberOfIssues = @issuesData.AllIssues?.Where(issue => issue.IssueType == issueType.issueType).Count();
                <tr >
                    <td style="cursor:pointer;color:@TextColor(@issueType, @numberOfIssues.GetValueOrDefault());" @onclick="() => NavigationManager.NavigateTo(issueType.pageUrl)">@issueType.title</td>
                    <td style="color:@TextColor(@issueType, @numberOfIssues.GetValueOrDefault());">@numberOfIssues</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IssuesData? issuesData;
    private int? numberOfIssues;

    protected override async Task OnInitializedAsync()
    {
        issuesData = await IssuesDataService.GetIssuesDataAsync();
        IssuesDataService.IssuesDataChanged += OnIssuesDataChanged;
    }

    private void OnIssuesDataChanged(IssuesData data)
    {
        InvokeAsync(() =>
        {
            issuesData = data;
            StateHasChanged();
        });
    }

    private string TextColor((string issueType, string title, string pageUrl) issueType, int nunberOfIssues)
    {
        switch (nunberOfIssues)
        {
            case 0:
                return "green";
            default:
                if (IssuesData.LastKnownGoodIssueTypes.Contains(issueType.issueType))
                {
                    return "red";
                }
                else
                {
                    return "orange";
                }
        }
    }
}
